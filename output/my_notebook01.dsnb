[
  {
    "name": "notebook_title",
    "description": null,
    "tags": null,
    "version": "7",
    "layout": "zeppelin",
    "type": "low",
    "snapshot": false,
    "isEditable": true,
    "isRunnable": true,
    "template": "dsrgmn3y",
    "templateConfig": "{\"visualization\":{\"filters\":[{\"_id\":1583324064459,\"type\":\"styling\",\"enabled\":true,\"conditions\":{\"operator\":\"and\",\"conditions\":[{\"property\":\"hiddenConnection\",\"operator\":\"*\",\"value\":\"\"}]},\"component\":\"edge\",\"target\":\"edge\",\"properties\":{\"colors\":[\"rgba(0, 0, 0, 0.1)\"],\"style\":[\"dashed\"],\"legendTitle\":[\"Hidden Connection\"]}},{\"_id\":1590499315755,\"type\":\"aggregation\",\"enabled\":true,\"conditions\":{\"operator\":\"and\",\"conditions\":[]},\"component\":\"vertex\",\"target\":\"vertex\",\"properties\":{},\"aggregation\":[{\"source\":\"\",\"type\":\"average\"}]}],\"version\":4}}",
    "paragraphs": [
      {
        "title": null,
        "hasTitle": false,
        "hideCode": true,
        "hideGutter": true,
        "hideVizConfig": true,
        "forms": "[]",
        "message": [
          "%md",
          "",
          "## **Regression Use Case Scenario**\n\nA real estate agent approaches you, a data scientist, to provide assistance in evaluating house prices in Boston. The agent requires this information on a daily basis to provide targeted services to clients. Using the Generalized Linear Model algorithm for Regression, you estimate the median value of owner-occupied homes in the Boston area.   \nRefer to the documentation, [here](https://docs.oracle.com/en/database/oracle/machine-learning/oml4sql/23/mlsql/regression2.html)<br>  \nCopyright (c) 2025 Oracle Corporation   \n###### [The Universal Permissive License (UPL), Version 1.0](https://oss.oracle.com/licenses/upl/)"
        ],
        "selectedVisualization": "html",
        "relations": [],
        "dynamicFormParams": "{}"
      },
      {
        "title": "Related Links",
        "hasTitle": false,
        "hideCode": true,
        "hideGutter": true,
        "hideVizConfig": true,
        "forms": "[]",
        "message": [
          "%md",
          "",
          "**Related Content**  \n\n| Topic | Link |\n| --- | --- |\n| OML4SQL GitHub Example | [Regression - GLM](https://github.com/oracle-samples/oracle-db-examples/blob/main/machine-learning/sql/21c/oml4sql-regression-glm.sql) |\n| `CREATE_MODEL2` Procedure | [CREATE_MODEL2 Procedure](https://docs.oracle.com/pls/topic/lookup?ctx=en/database/oracle/machine-learning/oml4sql/23/mlsql&id=DMPRG-GUID-560517E9-646A-4C20-8814-63FDA763BFD9) |\n| Generic Model Settings | [DBMS_DATA_MINING - Model Settings](https://docs.oracle.com/pls/topic/lookup?ctx=en/database/oracle/machine-learning/oml4sql/23/mlsql&id=ARPLS-GUID-8987EE6F-41A9-4DF9-997C-129B41FDC59A) |\n| Generalized Linear Model Settings | [DBMS_DATA_MINING - Algorithm Settings: Generalized Linear Models](https://docs.oracle.com/pls/topic/lookup?ctx=en/database/oracle/machine-learning/oml4sql/23/mlsql&id=ARPLS-GUID-4E3665B9-B1C2-4F6B-AB69-A7F353C70F5C) |\n| Data Dictionary Settings | [Oracle Machine Learning Data Dictionary Views](https://docs.oracle.com/pls/topic/lookup?ctx=en/database/oracle/machine-learning/oml4sql/23/mlsql&id=DMPRG-GUID-06AF74F5-39D7-4B0F-996E-35CA4C904EA0) |\n| Generalized Linear Model - Model Detail Views | [Model Detail Views for Generalized Linear Model](https://docs.oracle.com/pls/topic/lookup?ctx=en/database/oracle/machine-learning/oml4sql/23/mlsql&id=DMPRG-GUID-5451C38E-CDEF-4DA3-9741-3C811D3D66EA) |\n| About Regression | [About Regression](https://docs.oracle.com/pls/topic/lookup?ctx=en/database/oracle/machine-learning/oml4sql/23/mlsql&id=DMCON-GUID-2AFA11F8-D4CE-43F5-97D7-9BE58B6C1401) |\n| About Generalized Linear Model (GLM) | [About Generalized Linear Models](https://docs.oracle.com/pls/topic/lookup?ctx=en/database/oracle/machine-learning/oml4sql/23/mlsql&id=DMCON-GUID-2D4A68D3-06BC-45AA-BD0B-B15994CA94A0) |\n\n[]()\nBefore you start your OML4SQL use case journey, ensure that you have the following:\n- Data set []() []() Download the data set from [https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/datasets/data/boston_house_prices.csv](https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/datasets/data/boston_house_prices.csv) https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/datasets/data/boston_house_prices.csv . Note: This data set is used for illustrative purpose only.\n- Database []() Select or create database out of the following options: Get your FREE cloud account. Go to [https://cloud.oracle.com/database](https://cloud.oracle.com/database) https://cloud.oracle.com/database and select Oracle Database Cloud Service (DBCS), or Oracle Autonomous Database. Create an account and create an instance. See [Autonomous Database Quick Start Workshop](https://apexapps.oracle.com/pls/apex/dbpm/r/livelabs/view-workshop?wid=582) Autonomous Database Quick Start Workshop . Download the latest version of [Oracle Database](https://www.oracle.com/in/database/technologies/oracle-database-software-downloads.html) Oracle Database (on premises).\n- Machine Learning Tools []() Depending on your database selection, Use OML Notebooks for Oracle Autonomous Database. Install and use Oracle SQL Developer connected to an on-premises database or DBCS. See [Installing and Getting Started with SQL Developer](https://docs.oracle.com/pls/topic/lookup?ctx=en/database/oracle/machine-learning/oml4sql/23/mlsql&id=RPTUG-GUID-156BEBA3-2F9B-4CE0-8E91-728581FF46AB) Installing and Getting Started with SQL Developer .\n- Other Requirements []() Data Mining Privileges (this is automatically set for ADW). See [System Privileges for Oracle Machine Learning for SQL](https://docs.oracle.com/pls/topic/lookup?ctx=en/database/oracle/machine-learning/oml4sql/23/mlsql&id=DMPRG-GUID-34AABD01-9FF9-4C1A-A2A3-89A1827D10AE) System Privileges for Oracle Machine Learning for SQL ."
        ],
        "selectedVisualization": "html",
        "relations": [],
        "dynamicFormParams": "{}"
      },
      {
        "title": "Load Data",
        "hasTitle": false,
        "hideCode": true,
        "hideGutter": true,
        "hideVizConfig": true,
        "forms": "[]",
        "message": [
          "%md",
          "",
          "### **Load Data**\n\nExamine the data set and its attributes. Load the data in your database.\n\nIn this use case, you will modify the data set to add a column and upload the data set to your database. If you are using the Oracle Autonomous Database, you will upload files to the Oracle Cloud Infrastructure (OCI) Object Storage, create a sample table, load data into the sample table from files on the OCI Object Storage, and explore the data. If you are using the on-premises database, you will use Oracle SQL developer to import the data set and explore the data.  \n\n\n**Examine Data**\n\nThere are 13 attributes in the data set. This is a customized data set that excludes one attribute from the original data set. The following table displays information about the data attributes:\n\n| Attribute Name | Information |\n| --- | --- |\n| CRIM | Per capita crime rate by town |\n| ZN | The proportion of residential land zoned for lots over 25,000 sq.ft. |\n| INDUS | The proportion of non-retail business acres per town |\n| CHAS | Charles River dummy variable (= 1 if tract bounds river; 0 otherwise) |\n| NOX | Nitric oxides concentration (parts per 10 million) |\n| RM | The average number of rooms per dwelling |\n| AGE | The proportion of owner-occupied units built before 1940 |\n| DIS | Weighted distances to five Boston employment centers |\n| RAD | Index of accessibility to radial highways |\n| TAX | Full-value property-tax rate per $10,000 |\n| PTRATIO | The pupil-teacher ratio by town |\n| LSTAT | % lower status of the population |\n| MEDV | The median value of owner-occupied homes in $1000\u00e2\u0080\u0099s |\n  \n\n#### **Add a Column**\n\nIn this data set, no row identifier uniquely identifies each record in the data set. Add a new `case_id` column. The `case_id` assists with reproducible results, joining scores for individual customers with other data in, example, scoring data table.\n\nAdd a column called House ID (HID). The HID value is added as a primary key to the table so that identifying and retrieving each record is simple. Each record in the database is called a case and each case is identified by a `case_id`. Here,   is the `case_id`.  \n\nTo add the HID column:\n\n1. Open the .csv file in a spreadsheet.\n1. Delete the first row with 506 and 13. Now, the row with the column names becomes the first row.\n1. To the left of the data set, add a column.\n1. EnterHIDas the column name.\n1. In theHIDcolumn enter 1 as the first value identifying the first row.\n1. You will see a + icon in the spreadsheet cell. Drag the + icon right to the bottom till the end of the records.\n1. Right-click and selectFill Series.\n1. To remove the column \"B\" from the data set, select the entire column with the titleBby right clicking on the top of the column, and then selectDelete.\n\n#### **Import Data**\n\nThere are various methods to import data into the database. Two methods are explained here. One using SQL Developer (for on-premises) and the other using Object Storage (for Cloud).\n\nTo access the data set, import the modified data set into the database using SQL Developer.\n\nThe following steps help you to import the data set into an on premises database.  \n\n(Optional) Enter task prerequisites here.\n\n1. Launch SQL Developer on your system.\n1. Import the modified .csv file. SeeTables.\n1. Set House ID (HID) as a primary key. This column identifies each record and helps in retrieving information about a specific record. The HID column helps when you join tables or views. SeePrimary Key Constraint.\n\nYou are now ready to query the table in SQL Developer.  \n\nIf you are using a cloud account, one of the methods of importing the data is through Object Storage. Upload the data set to an Object Storage. The Object Storage URI will be used in another procedure.\n\nYou can load data into your  Oracle Autonomous Database (Autonomous Data Warehouse [ADW] or Autonomous Transaction Processing [ATP]) using Oracle Database tools, and Oracle and 3rd party data integration tools. You can load data:\n\n* from local files in your client computer, or\n* from files stored in a cloud-based object store\n\nFollow the steps to upload your data file to the Object Storage bucket.\n\n1. Login to your cloud account.\n1. Click the left-side hamburger menu and selectStoragefrom the menu.\n1. SelectBucketsfrom the Object Storage & Archive Storage option.\n1. Select the compartment in which you want to upload the data.\n1. ClickCreate Bucket.\n1. Enter a name for your bucket. For example, Bucket1. Leave the rest of the fields as default.\n1. ClickCreate.\n1. Click on the bucket that you created. Scroll down and clickUploadunder Objects.\n1. Leave the Object Name Prefix field black. Clickselect filesto navigate to the data file that you want to upload or drag and drop the data file. In this use case, select the modified .csv file.\n1. ClickUpload. The data file appears under Objects.\n1. Click the ellipses on the right side of the data file to view the menu. ClickView Object Details.\n1. Copy the URL PATH (URI) to a text file. This URI is used in the`DBMS_CLOUD.COPY_DATA` procedure.\n\nThis procedure creates an object storage containing the data file in your cloud account.  \n\nThe Auth Token is required in the `DBMS_CLOUD.CREATE_CREDENTIAL` procedure. You can generate the Auth Token in your cloud account.\n\n1. Login into your ADW Cloud account.\n1. Hover your mouse cursor over the human figure icon at the top right of the console and clickUser Settingsfrom the drop-down menu.\n1. ClickAuth Tokensunder Resources on the left of the console.\n1. ClickGenerate Token. A pop-up dialog appears.\n1. Enter a description (optional).\n1. ClickGenerate Token.\n1. Copy the generated token to a text file. The token does not appear again.\n1. ClickClose.\n\nThe object storage credential is used in the `DBMS_CLOUD.COPY_DATA` procedure.\n"
        ],
        "selectedVisualization": "html",
        "relations": [],
        "dynamicFormParams": "{}"
      },
      {
        "title": "Enter the following query to create an object storage credentials:",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "%script\nbegin\n  DBMS_CLOUD.create_credential (\n    credential_name => 'CRED',\n    username => '<your cloud account username>',\n    password => '<your Auth Token>'\n  );\nend;\n/"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "hasTitle": false,
        "hideCode": true,
        "hideGutter": true,
        "hideVizConfig": true,
        "forms": "[]",
        "message": [
          "%md",
          "",
          "-  -  -\n\n-  -  -"
        ],
        "selectedVisualization": "html",
        "relations": [],
        "dynamicFormParams": "{}"
      },
      {
        "title": "In another para, run the following query to check the user credentials:",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "SELECT* FROM USER_CREDENTIALS;"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "title": null,
        "hasTitle": false,
        "hideCode": true,
        "hideGutter": true,
        "hideVizConfig": true,
        "forms": "[]",
        "message": [
          "%md",
          "",
          "#### **Create a Table**\n\nCreate a table called `BOSTON_HOUSING`. This table is used in `DBMS_CLOUD.COPY_DATA` procedure to access the data set.\n\nEnter the following code in a new pare of the notebook that you created and run the notebook.\n\n#### **Load Data in the Table**\n\nLoad the data set stored in object storage to the `BOSTON_HOUSING` table.\n\nAdd a new para in the OML Notebooks and enter the following statement: **%script\nBEGIN\n DBMS_CLOUD.COPY_DATA(\n    table_name =>'BOSTON_HOUSING',\n    credential_name =>'CRED',\n    file_uri_list =>'https://objectstorage.us-phoenix-1.oraclecloud.com/n/namespace-string/b/bucketname/o/filename.csv',\n    format => json_object('type' value 'CSV', 'skipheaders' value 1)\n );\nEND;**\n\nExamine the statement:\n\n* `table_name`: is the target table\u00e2\u0080\u0099s name.\n* `credential_name`: is the name of the credential created earlier.\n* `file_uri_list`: is a comma delimited list of the source files you want to load.\n* `format`: defines the options you can specify to describe the format of the source file, including whether the file is of type text, ORC, Parquet, or Avro.\n\nIn this example, **namespace-string** is the Oracle Cloud Infrastructure object storage namespace and **bucketname** is the storage bucket name that you created earlier (for example, Bucket1), and **filename.csv** is the modified .csv file name that you uploaded to the storage bucket.\n"
        ],
        "selectedVisualization": "html",
        "relations": [],
        "dynamicFormParams": "{}"
      },
      {
        "title": "Explore Data",
        "hasTitle": false,
        "hideCode": true,
        "hideGutter": true,
        "hideVizConfig": true,
        "forms": "[]",
        "message": [
          "%md",
          "",
          "### **Explore Data**\n\nExplore the data to understand and assess the quality of the data. At this stage assess the data to identify data types and noise in the data. Look for missing values and numeric outlier values.\n\nThe following steps help you with the exploratory analysis of the data:\n"
        ],
        "selectedVisualization": "html",
        "relations": [],
        "dynamicFormParams": "{}"
      },
      {
        "title": "View the data in the `BOSTON_HOUSING` table by running the following query:",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "SELECT * FROM BOSTON_HOUSING\nORDER BY HID;"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "title": "Since you created the table specifying each column's datatype, you already know the datatype. However, to view the datatype of the columns, run the following script:",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "%script\nDESCRIBE BOSTON_HOUSING;"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "title": "Find the `COUNT` of the dataset to know how many rows are present.",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "SELECT COUNT (*) from BOSTON_HOUSING;"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "title": "To check if there are any missing values (NULL values), run the following query:",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "SELECT COUNT(*) FROM BOSTON_HOUSING WHERE PTRATIO=NULL OR CHAS=NULL OR\n LSTAT=NULL OR TAX=NULL OR CRIM=NULL OR MEDV=NULL OR ZN=NULL OR NOX=NULL\n OR AGE=NULL OR INDUS=NULL OR DIS=NULL OR RAD=NULL OR PTRATIO=NULL OR RM=NULL;"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "title": "To list the distinct values for the categorical column CHAS and the number of records for each distinct value of CHAS, run the following query:",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "%sql\nSELECT CHAS, COUNT(1)\nFROM BOSTON_HOUSING\nGROUP BY CHAS;"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "title": "To calculate mean, median, min, max, and interquartile range (IQR) create a view called `unpivoted`.",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "%sql\ncreate or replace view unpivoted as\nselect *\n  from (\n       \nSELECT 'CRIM' COL, ROUND(MIN(CRIM),2) MIN_VAL, PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY CRIM) FIRST_QUANTILE, ROUND(AVG(CRIM),2) MEAN_VAL, ROUND(MEDIAN(CRIM),2) MEDIAN_VAL, PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY CRIM) THIRD_QUANTILE, ROUND(MAX(CRIM),2) MAX_VAL\nFROM BOSTON_HOUSING\nUNION\nSELECT 'AGE' COL, ROUND(MIN(AGE),2) MIN_VAL,  PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY AGE) FIRST_QUANTILE, ROUND(AVG(AGE),2) MEAN_VAL, ROUND(MEDIAN(AGE),2) MEDIAN_VAL, PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY AGE) THIRD_QUANTILE, ROUND(MAX(AGE),2) MAX_VAL\nFROM BOSTON_HOUSING\nUNION\nSELECT 'DIS' COL, ROUND(MIN(DIS),2) MIN_VAL,  PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY DIS) FIRST_QUANTILE, ROUND(AVG(DIS),2) MEAN_VAL, ROUND(MEDIAN(DIS),2) MEDIAN_VAL, PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY DIS) THIRD_QUANTILE, ROUND(MAX(DIS),2) MAX_VAL\nFROM BOSTON_HOUSING\n  ) a\nunpivot\n(\n  VALUE\n    for stat in (\"MIN_VAL\", \"FIRST_QUANTILE\", \"MEAN_VAL\",\"MEDIAN_VAL\", \"THIRD_QUANTILE\", \"MAX_VAL\")\n);"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "title": "To view the values, pivot the table by running the following query:",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "%sql\nselect *\n  from unpivoted\npivot(\n  SUM(VALUE)\n    for COL in ('CRIM', 'AGE','DIS')\n);"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "title": null,
        "hasTitle": false,
        "hideCode": true,
        "hideGutter": true,
        "hideVizConfig": true,
        "forms": "[]",
        "message": [
          "%md",
          "",
          "This completes the data understanding and data preparation stage. OML supports Automatic Data Preparation (ADP). ADP is enabled through the model settings. When ADP is enabled, the transformations required by the algorithm are performed automatically and embedded in the model. This step is done during the Build Model stage. The commonly used methods of data preparation are binning, normalization, and missing value treatment.  \n"
        ],
        "selectedVisualization": "html",
        "relations": [],
        "dynamicFormParams": "{}"
      },
      {
        "title": "Build Model",
        "hasTitle": false,
        "hideCode": true,
        "hideGutter": true,
        "hideVizConfig": true,
        "forms": "[]",
        "message": [
          "%md",
          "",
          "### **Build Model**\n\nBuild your model using the training data set. Use the `DBMS_DATA_MINING.CREATE_MODEL2` procedure to build your model and specify model settings.\n\nFor a supervised learning, like Regression, before creating the model, split the data in to training and test data. Although you can use the entire data set to build a model, it is difficult to validate the model unless there are new data sets available. Therefore, to evaluate the model and to accurately assess the performance of the model on the same data, you generally split or separate the data into training and test data. You use the training data set to train the model and then use the test data set to test the accuracy of the model by running prediction queries. The testing data set already contains known values for the attribute that you want to predict. It is thus easy to determine whether the model's predictions are correct.  \n\nBefore you build a model, choose the suitable algorithm. You can choose one of the following algorithms to solve a regression problem:  \n\n\n**Algorithm Selection**\n\n* Extreme Gradient Boosting\n* Generalized Linear Model\n* Neural Network\n* Support Vector Machine\n\nWhen you want to understand the data set, you always start from a simple and easy baseline model. The Generalized Linear Model algorithm is the right choice because it is simple and easy to interpret since it fits a linear relationship between the feature and the target. You can get an initial understanding of a new data set from the result of the linear model.\n\nThe following steps guide you to split your data and build your model with the selected algorithm.\n"
        ],
        "selectedVisualization": "html",
        "relations": [],
        "dynamicFormParams": "{}"
      },
      {
        "title": "Split the data into 80/20 as training and test data. Run the following statement:",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "BEGIN\n    EXECUTE IMMEDIATE 'CREATE OR REPLACE VIEW TRAINING_DATA AS SELECT * FROM BOSTON_HOUSING SAMPLE (80) SEED (1)';\n    DBMS_OUTPUT.PUT_LINE ('Created TRAINING_DATA');\n    EXECUTE IMMEDIATE 'CREATE OR REPLACE VIEW TEST_DATA AS SELECT * FROM BOSTON_HOUSING MINUS SELECT * FROM TRAINING_DATA';\n    DBMS_OUTPUT.PUT_LINE ('Created TEST_DATA');\n    \nEND;"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "title": "To find the count of rows in `TRAINING_DATA`, run the following statement:",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "select count(*) from TRAINING_DATA;"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "title": "To find the count of rows from `TEST_DATA`, run the following statement:",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "select COUNT(*) from TEST_DATA;"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "title": "To find if any rows are not sampled (left out) in both `TRAINING_DATA` and `TEST_DATA`, run the following query:",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "SELECT COUNT(1)\nFROM TRAINING_DATA train\nJOIN TEST_DATA test\nON train.HID = test.HID"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "title": "Build your model using the `CREATE_MODEL2` procedure. First, declare a variable to store model settings or hyperparameters. Run the following script:",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "%script\nDECLARE\n    v_setlst DBMS_DATA_MINING.SETTING_LIST;\n    BEGIN\n    v_setlst('PREP_AUTO') := 'ON';\n    v_setlst('ALGO_NAME') := 'ALGO_GENERALIZED_LINEAR_MODEL';\n    v_setlst('GLMS_DIAGNOSTICS_TABLE_NAME') := 'GLMR_DIAG';\n    v_setlst('GLMS_FTR_SELECTION') := 'GLMS_FTR_SELECTION_ENABLE';\n    v_setlst('GLMS_FTR_GENERATION') := 'GLMS_FTR_GENERATION_ENABLE';\n     \n    DBMS_DATA_MINING.CREATE_MODEL2(\n      MODEL_NAME          =>  'GLMR_REGR',\n      MINING_FUNCTION     => 'REGRESSION'\n      DATA_QUERY          =>  'SELECT * FROM TRAINING_DATA',\n      SET_LIST            =>  v_setlst,\n      CASE_ID_COLUMN_NAME =>  'HID',\n      TARGET_COLUMN_NAME  =>  'MEDV');\nEND;"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "hasTitle": false,
        "hideCode": true,
        "hideGutter": true,
        "hideVizConfig": true,
        "forms": "[]",
        "message": [
          "%md",
          "",
          "Examine the script:\n\n-  -  -  -  -  -  -  -\n\nThe `CREATE_MODEL2` procedure has the following parameters:\n\n-  -  -  -  -  -\n\n**Note:** Any parameters or settings not specified are either system-determined or default values are used.\n\n**Note:** Any parameters or settings not specified are either system-determined or default values are used."
        ],
        "selectedVisualization": "html",
        "relations": [],
        "dynamicFormParams": "{}"
      },
      {
        "title": "Evaluate",
        "hasTitle": false,
        "hideCode": true,
        "hideGutter": true,
        "hideVizConfig": true,
        "forms": "[]",
        "message": [
          "%md",
          "",
          "### **Evaluate**\n\nEvaluate your model by viewing diagnostic metrics and performing quality checks.\n\nSometimes querying dictionary views and model detail views is sufficient to measure your model's performance. However, you can evaluate your model by computing test metrics such as Mean Absolute Error (MAE), Root Mean Squared Error (RMSE), confusion matrix, lift statistics, cost matrix, and so on. For Association Rules, you can inspect various rules to see if they reveal new insights for item dependencies (antecedent itemset implying consequent) or for unexpected relationships among items.\n\n#### **Dictionary and Model Views**\n\nTo obtain information about the model and view model settings, you can query data dictionary views and model detail views. Specific views in model detail views display model statistics which can help you evaluate the model.\n\nThe data dictionary views for Oracle Machine Learning are listed in the following table. A database administrator (DBA) and USER versions of the views are also available.\n\n| View Name | Description |\n| --- | --- |\n| [ALL_MINING_MODELS](https://docs.oracle.com/pls/topic/lookup?ctx=en/database/oracle/machine-learning/oml4sql/23/mlsql&id=DMAPI-GUID-955402B6-B52E-494A-865B-7BCAFDB124B2) | Provides information about all accessible machine learning models |\n| [ALL_MINING_MODEL_ATTRIBUTES](https://docs.oracle.com/pls/topic/lookup?ctx=en/database/oracle/machine-learning/oml4sql/23/mlsql&id=DMAPI-GUID-E18029D5-09BB-41CB-82BA-894A0528E5EF) | Provides information about the attributes of all accessible machine learning models |\n| [ALL_MINING_MODEL_SETTINGS](https://docs.oracle.com/pls/topic/lookup?ctx=en/database/oracle/machine-learning/oml4sql/23/mlsql&id=DMAPI-GUID-8262B256-1DFD-40C1-B56C-8E391B5AA303) | Provides information about the configuration settings for all accessible machine learning models |\n| [ALL_MINING_MODEL_VIEWS](https://docs.oracle.com/pls/topic/lookup?ctx=en/database/oracle/machine-learning/oml4sql/23/mlsql&id=DMAPI-GUID-69D3A987-CCD8-435A-B624-B3FD0583F02B) | Provides information about the model views for all accessible machine learning models |\n| [ALL_MINING_MODEL_XFORMS](https://docs.oracle.com/pls/topic/lookup?ctx=en/database/oracle/machine-learning/oml4sql/23/mlsql&id=DMAPI-GUID-40EB4505-47A6-4C1B-85F8-A49BA0906D07) | Provides the user-specified transformations embedded in all accessible machine learning models. |\n  \n\nModel detail views are specific to the algorithm. You can obtain more insights about the model you created by viewing the model detail views. The names of model detail views begin with DM$xx where xx corresponds to the view prefix. See [Model Detail Views](https://docs.oracle.com/pls/topic/lookup?ctx=en/database/oracle/machine-learning/oml4sql/23/mlsql&id=DMPRG-GUID-AF7C531D-5327-4456-854C-9D6424C5F9EC) .\n\nThe following steps help you to view different dictionary views and model detail views.  \n"
        ],
        "selectedVisualization": "html",
        "relations": [],
        "dynamicFormParams": "{}"
      },
      {
        "title": "Run the following statement to view the settings in `USER_MINING_MODEL_SETTINGS`:",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "SELECT * FROM USER_MINING_MODEL_SETTINGS WHERE MODEL_NAME='GLMR_REGR';"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "title": "Run the following statement to view only the `SETTING_NAME` and `SETTING_VALUE` column from the above table:",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "SELECT SETTING_NAME, SETTING_VALUE FROM USER_MINING_MODEL_SETTINGS WHERE MODEL_NAME = 'GLMR_REGR' ORDER BY SETTING_NAME;"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "title": "Run the following statement to see attribute information in `USER_MINING_MODEL_ATTRIBUTES` view:",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "SELECT ATTRIBUTE_NAME, ATTRIBUTE_TYPE FROM USER_MINING_MODEL_ATTRIBUTES WHERE MODEL_NAME = 'GLMR_REGR' ORDER BY ATTRIBUTE_NAME;"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "title": "Run the following statement to see information on various views in `USER_MINING_MODEL_VIEWS`:",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "SELECT VIEW_NAME, VIEW_TYPE FROM USER_MINING_MODEL_VIEWS WHERE MODEL_NAME='GLMR_REGR' ORDER BY VIEW_NAME;"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "title": "From the table above, query the Global details for linear regression. SeeModel Detail Views for Generalized Linear Model. Run the following query to see all the columns of the view:",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "SELECT * FROM DM$VGGLMR_REGR;"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "title": "From the above table, you can ignore the first column `PARTITION_NAME` and refine the query to display the rest of the columns ordered by name. Run the following statement:",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "SELECT NAME, NUMERIC_VALUE, STRING_VALUE FROM DM$VGGLMR_REGR ORDER BY NAME;"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "title": "Query the GLM Regression Attributes Diagnostics view.",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "SELECT FEATURE_EXPRESSION, round(COEFFICIENT,6) COEFFICIENT, round(P_VALUE,4) P_VALUE,\nCASE\n    when p_value < 0.001 THEN '***'\n    when p_value < 0.01 THEN '**'\n    when p_value < 0.05 THEN '*'\n    when p_value < 0.1 THEN '.'\n    else ' '\nEND AS significance_statement\nFROM DM$VDGLMR_REGR ORDER BY FEATURE_EXPRESSION;"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "hasTitle": false,
        "hideCode": true,
        "hideGutter": true,
        "hideVizConfig": true,
        "forms": "[]",
        "message": [
          "%md",
          "",
          "Let us examine the statement: -  -\n\n-  -"
        ],
        "selectedVisualization": "html",
        "relations": [],
        "dynamicFormParams": "{}"
      },
      {
        "title": "Now, run the following statement to query Normalization and Missing Value Handling view. The columns of the view are described inModel Detail Views for Normalization and Missing Value Handling.",
        "hasTitle": true,
        "message": [
          "%sql",
          "",
          "SELECT ATTRIBUTE_NAME, round(NUMERIC_MISSING_VALUE,2) NUMERIC_MISSING_VALUE FROM DM$VNGLMR_REGR\nORDER BY ATTRIBUTE_NAME;"
        ],
        "hideGutter": true,
        "hideVizConfig": true
      },
      {
        "hasTitle": false,
        "hideCode": true,
        "hideGutter": true,
        "hideVizConfig": true,
        "forms": "[]",
        "message": [
          "%md",
          "",
          "-  -\n\nSince there are no missing values (NULLs) in your data, you can ignore the result."
        ],
        "selectedVisualization": "html",
        "relations": [],
        "dynamicFormParams": "{}"
      },
      {
        "title": null,
        "hasTitle": false,
        "hideCode": true,
        "hideGutter": true,
        "hideVizConfig": true,
        "forms": "[]",
        "message": [
          "%md",
          "",
          "#### **Test Your Model**\n\nIn this use case, you are evaluating a regression model by computing Root Mean Square Error (RMSE) and Mean Absolute Error Mean (MAE) on the test data with known target values and comparing the predicted values with the known values.\n\nTest metrics are used to assess how accurately the model predicts the known values. If the model performs well and meets your business requirements, it can then be applied to new data to predict the future. These matrices can help you to compare models to arrive at one model that satisfies your evaluation criteria.  \n\nFor this use case, you compute Root Mean Square Error (RMSE) and Mean Absolute Error Mean (MAE) values. The RMSE and MAE are popular regression statistics. RMSE is an estimator for predictive models. The score averages the residuals for each case to yield a single indicator of model error. Mean absolute error is useful for understanding how close overall the predictions were to actual values. A smaller score means predictions were more accurate.\n\nThe following steps computes the error metrics for your model.\n\n* To compute RMSE and MAE, run the following statement:%sql\nSELECT round(SQRT(AVG((A.PRED_MEDV - B.MEDV) * (A.PRED_MEDV - B.MEDV))),2) RMSE,\n       round(AVG(ABS(A.PRED_MEDV - B.MEDV)),2) MAE\n  FROM (SELECT HID, PREDICTION(GLMR_REGR using *) PRED_MEDV\n          FROM TEST_DATA) A,\n       TEST_DATA B\n  WHERE A.HID = B.HID;This statement is using the prediction query to score the median value from the test data. The predicted value and the actual value from the test data is used to compute RMSE and MAE .\n\nThis statement is using the prediction query to score the median value from the test data. The predicted value and the actual value from the test data is used to compute RMSE and MAE .\n\nRMSE and MAE convey average model prediction errors in units consistent with the target variable. When comparing models, a model with lower values is better. RMSE, which squares the errors, gives more weight to large errors, while MAE error scales linearly. Therefore, the predictions look fair and the model is a good fit for prediction.  \n"
        ],
        "selectedVisualization": "html",
        "relations": [],
        "dynamicFormParams": "{}"
      },
      {
        "title": "Score",
        "hasTitle": false,
        "hideCode": true,
        "hideGutter": true,
        "hideVizConfig": true,
        "forms": "[]",
        "message": [
          "%md",
          "",
          "### **Score**\n\nScoring involves applying the model to the target data. Use `PREDICTION` query to predict the `MEDV` value on the test data.\n\nThe following step scores the test data comparing with the original data.\n\n* Predict the median value of owner-occupied homes in the Boston area from the `TEST_DATA` and compare the predicted `MEDV` value with the actual `MEDV` value in your result.SELECT HID, ROUND(PREDICTION(GLMR_REGR USING *), 1) AS \nPREDICTED_MEDV, MEDV AS ACTUAL_MEDV FROM TEST_DATA ORDER BY HID;Examine the query:`HID:`is the House ID.`ROUND (n,integer):` in this case, is `ROUND (PREDICTION(GLMR_REGR USING *), 1)` returns results of `PREDICTION(GLMR_REGR USING *)` rounded to integer places to the right. Here, rounded to 1 place to the right.`PREDICTED_MEDV:` is the predicted `MEDV` value.`ACTUAL_MEDV:` is the `MEDV` value in the test data.\n* `HID:`is the House ID.\n* `ROUND (n,integer):` in this case, is `ROUND (PREDICTION(GLMR_REGR USING *), 1)` returns results of `PREDICTION(GLMR_REGR USING *)` rounded to integer places to the right. Here, rounded to 1 place to the right.\n* `PREDICTED_MEDV:` is the predicted `MEDV` value.\n* `ACTUAL_MEDV:` is the `MEDV` value in the test data.\n\nExamine the query:\n\n\u00e2\u0080\u008bTo conclude, you have successfully predicted the median house prices in Boston using Generalized Linear Model algorithm.  \n"
        ],
        "selectedVisualization": "html",
        "relations": [],
        "dynamicFormParams": "{}"
      },
      {
        "title": "For more information...",
        "hasTitle": true,
        "hideCode": true,
        "hideGutter": true,
        "hideVizConfig": true,
        "message": [
          "%md",
          "",
          "### Related link\n- [How ADP Transforms the Data](https://docs.oracle.com/pls/topic/lookup?ctx=en/database/oracle/machine-learning/oml4sql/23/mlsql&id=DMPRG-GUID-BCEF5F92-D129-4550-A4EF-85C509E68DE4)\n- [DBMS_CLOUD.COPY_DATA Procedure](https://docs.oracle.com/pls/topic/lookup?ctx=en/database/oracle/machine-learning/oml4sql/23/mlsql&id=ADBSA-GUID-9428EA51-5DDD-43C2-B1F5-CD348C156122)"
        ],
        "selectedVisualization": "html"
      }
    ]
  }
]